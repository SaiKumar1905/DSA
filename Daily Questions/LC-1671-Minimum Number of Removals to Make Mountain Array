class Solution {
    public int minimumMountainRemovals(int[] nums) {
        int n = nums.length;
        int [] lis = new int[n];
        for(int i=0;i<n;i++){
             lis[i]=1;
            for(int j=0;j<i;j++){
                if(nums[j]<nums[i]){
                    lis[i]=Math.max(lis[i],lis[j]+1);
                }
            }
        }
        int [] lds = new int [n];
        for(int i=n-1;i>=0;i--){
             lds[i]=1;
            for(int j=i+1;j<n;j++){
                if(nums[j]<nums[i]){
                    lds[i]=Math.max(lds[i],lds[j]+1);
                }
            }
        }
        int maxmountainlength =0;
        for(int i =0;i<n;i++){
            if(lis[i]>1 && lds[i]>1){
                maxmountainlength = Math.max(maxmountainlength,lis[i]+lds[i]-1);
            }
        }
        return n-maxmountainlength;
    }
}
