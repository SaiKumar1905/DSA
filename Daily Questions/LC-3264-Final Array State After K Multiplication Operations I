class Solution {
    public int[] getFinalState(int[] nums, int k, int multiplier) {
        
        int n=nums.length;
        PriorityQueue<int[]> pq=new PriorityQueue<>((a, b) -> {
            if (a[0] == b[0]) {
                return Integer.compare(a[1], b[1]); // Compare by index if values are the same
            }
            return Integer.compare(a[0], b[0]); // Compare by value
        });


        for(int i=0;i<n;i++){
            pq.add(new int[]{nums[i],i});
        }

        for(int i=0;i<k;i++){
            int [] arr=pq.poll();
            int val=arr[0];
            int idx=arr[1];

            nums[idx]=val*multiplier;
            pq.add(new int[]{nums[idx],idx});
        }
        return nums;
    }
}
